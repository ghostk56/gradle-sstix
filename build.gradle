buildscript {
	ext {
		springbootVersion = '3.1.1'
	}
	repositories {
		mavenCentral()
		maven {
			url = uri("https://plugins.gradle.org/m2/")
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootVersion}")
	}
}
//plugins {
//	id 'java'
//	id 'org.springframework.boot' version '3.1.1'
//	id 'io.spring.dependency-management' version '1.1.0'
//}
//
//bootJar.enabled= false

ext {
	javaVersion = '17'
	encodingOptions = 'UTF-8'
	gsonVersion = '2.10'
}

subprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'
	apply plugin: 'java-library'

	group = 'com.sstixbackend'
	version = '0.0.1-SNAPSHOT'

	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion

	compileJava.options.encoding encodingOptions
	compileTestJava.options.encoding encodingOptions

	tasks.withType(JavaCompile) {
		options.encoding = encodingOptions
	}

	tasks.withType(Javadoc) {
		options.encoding = encodingOptions
	}

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	//	tasks.named('test') {
	//		useJUnitPlatform()
	//	}
}

task 'sstixApiRun' {
	group("app")
	dependsOn(":sstix-api:bootRun")
}

task 'exampleApiRun' {
	group("app")
	dependsOn(":example-api:bootRun")
}

task 'apibootBuildImage' {
	group("app")
	dependsOn(":sstix-api:bootBuildImage", ":example-api:bootBuildImage")
}


